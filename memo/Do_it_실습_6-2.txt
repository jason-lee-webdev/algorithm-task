코드는 <<do_it_algorithm\src\Do_it_실습\chap06\BubbleSortB.java>> 에 작성하였다.

[문제]
버블 정렬을 구현하되 "멈춤" 으로 개선한다.

[로직]
4개의 숫자가 [2 1 3 4] 와 같이 나열되어 있다고 가정한다.

패스(가장 마지막 요소와 그 이전 요소를 비교 교환하고 이어서 뒤에서 2번째 요소와 뒤에서 3번째 요소를 비교 교환 하다 더 이상 비교할 요소가 없으면 종료)가
1번 진행되면 3개의 숫자는 [1 2 3 4] 와 같이 나열된다.

2번째 패스를 진행하면 더 이상 위치를 바꿀 요소가 없으므로 교환 횟수가 0이 된다.

정렬이 이미 완료된 상황이기 때문에 3번째 패스를 실행할 이유가 없다.

이렇게 정렬 중간 패스의 교환 횟수가 0일 경우 정렬이 완료되었다고 판단해 정렬을 수행하는 메소드를 종료한다.

[피드백]
- 패스 안에서 이전 요소와 이후 요소의 인덱스를 갖는 변수를 설정할 때
이전 요소를 기준으로 하면 이전 요소는 j 이후 요소는 j + 1 로 표현할 수 있고,
이후 요소를 기준으로 하면 이전 요소는 j - 1 이후 요소는 j 로 표현할 수 있다.
기준을 어디로 놓는지에 따라 반복의 시작과 끝이 달라지므로 주의한다.

- bubbleSort 메소드의 매개변수에 정렬할 요소가 담긴 배열을 작성하는게 객체지향적인 설계일 것 같다.
그리고 bubbleSort 메소드를 객체 생성없이 호출할 수 있도록 static 메소드로 선언한다.
BubbleSort2 클래스에 버블 정렬을 다시 구현해보았다.